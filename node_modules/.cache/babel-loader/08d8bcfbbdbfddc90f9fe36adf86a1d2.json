{"ast":null,"code":"import{COMMENTS}from'../shared/comments';import{DISHES}from'../shared/dishes';import{LEADERS}from'../shared/leaders';import{PROMOTIONS}from'../shared/promotions';// state\nexport var initialState={comments:COMMENTS,dishes:DISHES,leaders:LEADERS,promotions:PROMOTIONS};// action\n// plain js obj with a type field that specifies how to\n// change something in the state\n/**\n * \n    Pure functions:     A function which is called Reducer in Redux,\n                     that take the current state and action and return a \n                     new state\n                        - Update data immutably ( do not modify inputs ) \n */export var Reducer=function Reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;return state;};","map":{"version":3,"sources":["/home/mayur/Desktop/Document/Company_Assignment/Header_Footer_and_Form/src/redux/reducer.js"],"names":["COMMENTS","DISHES","LEADERS","PROMOTIONS","initialState","comments","dishes","leaders","promotions","Reducer","state","action"],"mappings":"AAAA,OAASA,QAAT,KAAyB,oBAAzB,CACA,OAASC,MAAT,KAAuB,kBAAvB,CACA,OAASC,OAAT,KAAwB,mBAAxB,CACA,OAASC,UAAT,KAA2B,sBAA3B,CAGA;AACA,MAAO,IAAMC,CAAAA,YAAY,CAAG,CACxBC,QAAQ,CAAEL,QADc,CAExBM,MAAM,CAAEL,MAFgB,CAGxBM,OAAO,CAAEL,OAHe,CAIxBM,UAAU,CAAEL,UAJY,CAArB,CAQP;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMM,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBN,YAAyB,IAAXO,CAAAA,MAAW,2CACrD,MAAOD,CAAAA,KAAP,CACH,CAFM","sourcesContent":["import { COMMENTS } from '../shared/comments'\nimport { DISHES } from '../shared/dishes'\nimport { LEADERS } from '../shared/leaders'\nimport { PROMOTIONS } from '../shared/promotions'\n\n\n// state\nexport const initialState = {\n    comments: COMMENTS,\n    dishes: DISHES,\n    leaders: LEADERS,\n    promotions: PROMOTIONS,\n};\n\n\n// action\n// plain js obj with a type field that specifies how to\n// change something in the state\n\n/**\n * \n    Pure functions:     A function which is called Reducer in Redux,\n                     that take the current state and action and return a \n                     new state\n                        - Update data immutably ( do not modify inputs ) \n */\nexport const Reducer = (state = initialState, action) => {\n    return state;\n};"]},"metadata":{},"sourceType":"module"}